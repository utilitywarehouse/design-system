name: Release
on:
  push:
    branches:
      - main
env:
  CI: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
    steps:
      - uses: pnpm/action-setup@v2
        with:
          version: 7
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'

      - name: Setup npmrc
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
      - name: Install dependencies
        run: pnpm install

      - name: Create Release Pull Request or Publish to npm
        uses: changesets/action@v1
        with:
          version: pnpm ci:version
          commit: "version packages"
          title: "Version Packages"
          publish: pnpm ci:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: Deploy New Release Storybook
      #   if: steps.changesets.outputs.published == 'true'
      #   run: |
      #     docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} registry.uw.systems
      #     docker build . -t registry.uw.systems/${{ secrets.DOCKER_REPOSITORY_NAMESPACE }}/cwui-storybook:release --build-arg NPM_TOKEN=${{ secrets.NPM_TOKEN }}
      #     docker push -a registry.uw.systems/${{ secrets.DOCKER_REPOSITORY_NAMESPACE }}/cwui-storybook
