import React from 'react';
import { View } from 'react-native';
import { createStyleSheet, useStyles } from 'react-native-unistyles';
import type BoxProps from './Box.props';

const Box: React.FC<BoxProps> = ({
  alignContent,
  alignItems,
  alignSelf,
  aspectRatio,
  borderBottomWidth,
  borderEndWidth,
  borderLeftWidth,
  borderRightWidth,
  borderStartWidth,
  borderTopWidth,
  borderWidth,
  bottom,
  display,
  end,
  flex,
  flexBasis,
  flexDirection,
  rowGap,
  gap,
  columnGap,
  flexGrow,
  flexShrink,
  flexWrap,
  height,
  justifyContent,
  left,
  margin,
  marginBottom,
  marginEnd,
  marginHorizontal,
  marginLeft,
  marginRight,
  marginStart,
  marginTop,
  marginVertical,
  maxHeight,
  maxWidth,
  minHeight,
  minWidth,
  overflow,
  padding,
  paddingBottom,
  paddingEnd,
  paddingHorizontal,
  paddingLeft,
  paddingRight,
  paddingStart,
  paddingTop,
  paddingVertical,
  position,
  right,
  start,
  top,
  width,
  zIndex,
  direction,
  backfaceVisibility,
  backgroundColor,
  borderBlockColor,
  borderBlockEndColor,
  borderBlockStartColor,
  borderBottomColor,
  borderBottomEndRadius,
  borderBottomLeftRadius,
  borderBottomRightRadius,
  borderBottomStartRadius,
  borderColor,
  borderCurve,
  borderEndColor,
  borderEndEndRadius,
  borderEndStartRadius,
  borderLeftColor,
  borderRadius,
  borderRightColor,
  borderStartColor,
  borderStartEndRadius,
  borderStartStartRadius,
  borderStyle,
  borderTopColor,
  borderTopEndRadius,
  borderTopLeftRadius,
  borderTopRightRadius,
  borderTopStartRadius,
  opacity,
  elevation,
  pointerEvents,
  cursor,
  shadowColor,
  shadowOffset,
  shadowOpacity,
  shadowRadius,
  transform,
  transformOrigin,
  ...props
}) => {
  const { styles } = useStyles(stylesheet);
  return (
    <View
      {...props}
      style={[
        styles.box(
          alignContent,
          alignItems,
          alignSelf,
          aspectRatio,
          borderBottomWidth,
          borderEndWidth,
          borderLeftWidth,
          borderRightWidth,
          borderStartWidth,
          borderTopWidth,
          borderWidth,
          bottom,
          display,
          end,
          flex,
          flexBasis,
          flexDirection,
          rowGap,
          gap,
          columnGap,
          flexGrow,
          flexShrink,
          flexWrap,
          (height = height || props.h),
          justifyContent,
          left,
          (margin = margin || props.m),
          (marginBottom = marginBottom || props.mb),
          marginEnd,
          (marginHorizontal = marginHorizontal || props.mx),
          (marginLeft = marginLeft || props.ml),
          (marginRight = marginRight || props.mr),
          marginStart,
          (marginTop = marginTop || props.mt),
          (marginVertical = marginVertical || props.my),
          maxHeight,
          maxWidth,
          minHeight,
          minWidth,
          overflow,
          (padding = padding || props.p),
          paddingBottom,
          paddingEnd,
          (paddingHorizontal = paddingHorizontal || props.px),
          (paddingLeft = paddingLeft || props.pl),
          (paddingRight = paddingRight || props.pr),
          paddingStart,
          (paddingTop = paddingTop || props.pt),
          (paddingVertical = paddingVertical || props.py),
          position,
          right,
          start,
          top,
          (width = width || props.w),
          zIndex,
          direction,
          backfaceVisibility,
          (backgroundColor = backgroundColor || props.bg || props.bgColor),
          borderBlockColor,
          borderBlockEndColor,
          borderBlockStartColor,
          borderBottomColor,
          borderBottomEndRadius,
          borderBottomLeftRadius,
          borderBottomRightRadius,
          borderBottomStartRadius,
          borderColor,
          borderCurve,
          borderEndColor,
          borderEndEndRadius,
          borderEndStartRadius,
          borderLeftColor,
          (borderRadius = borderRadius || props.rounded),
          borderRightColor,
          borderStartColor,
          borderStartEndRadius,
          borderStartStartRadius,
          borderStyle,
          borderTopColor,
          borderTopEndRadius,
          borderTopLeftRadius,
          borderTopRightRadius,
          borderTopStartRadius,
          opacity,
          elevation,
          pointerEvents,
          cursor,
          shadowColor,
          shadowOffset,
          shadowOpacity,
          shadowRadius,
          transform,
          transformOrigin
        ),
        props.style,
      ]}
    />
  );
};

const stylesheet = createStyleSheet(() => ({
  box: (
    alignContent,
    alignItems,
    alignSelf,
    aspectRatio,
    borderBottomWidth,
    borderEndWidth,
    borderLeftWidth,
    borderRightWidth,
    borderStartWidth,
    borderTopWidth,
    borderWidth,
    bottom,
    display,
    end,
    flex,
    flexBasis,
    flexDirection,
    rowGap,
    gap,
    columnGap,
    flexGrow,
    flexShrink,
    flexWrap,
    height,
    justifyContent,
    left,
    margin,
    marginBottom,
    marginEnd,
    marginHorizontal,
    marginLeft,
    marginRight,
    marginStart,
    marginTop,
    marginVertical,
    maxHeight,
    maxWidth,
    minHeight,
    minWidth,
    overflow,
    padding,
    paddingBottom,
    paddingEnd,
    paddingHorizontal,
    paddingLeft,
    paddingRight,
    paddingStart,
    paddingTop,
    paddingVertical,
    position,
    right,
    start,
    top,
    width,
    zIndex,
    direction,
    backfaceVisibility,
    backgroundColor,
    borderBlockColor,
    borderBlockEndColor,
    borderBlockStartColor,
    borderBottomColor,
    borderBottomEndRadius,
    borderBottomLeftRadius,
    borderBottomRightRadius,
    borderBottomStartRadius,
    borderColor,
    borderCurve,
    borderEndColor,
    borderEndEndRadius,
    borderEndStartRadius,
    borderLeftColor,
    borderRadius,
    borderRightColor,
    borderStartColor,
    borderStartEndRadius,
    borderStartStartRadius,
    borderStyle,
    borderTopColor,
    borderTopEndRadius,
    borderTopLeftRadius,
    borderTopRightRadius,
    borderTopStartRadius,
    opacity,
    elevation,
    pointerEvents,
    cursor,
    shadowColor,
    shadowOffset,
    shadowOpacity,
    shadowRadius,
    transform,
    transformOrigin
  ) => ({
    alignContent,
    alignItems,
    alignSelf,
    aspectRatio,
    borderBottomWidth,
    borderEndWidth,
    borderLeftWidth,
    borderRightWidth,
    borderStartWidth,
    borderTopWidth,
    borderWidth,
    bottom,
    display,
    end,
    flex,
    flexBasis,
    flexDirection,
    rowGap,
    gap,
    columnGap,
    flexGrow,
    flexShrink,
    flexWrap,
    height,
    justifyContent,
    left,
    margin,
    marginBottom,
    marginEnd,
    marginHorizontal,
    marginLeft,
    marginRight,
    marginStart,
    marginTop,
    marginVertical,
    maxHeight,
    maxWidth,
    minHeight,
    minWidth,
    overflow,
    padding,
    paddingBottom,
    paddingEnd,
    paddingHorizontal,
    paddingLeft,
    paddingRight,
    paddingStart,
    paddingTop,
    paddingVertical,
    position,
    right,
    start,
    top,
    width,
    zIndex,
    direction,
    backfaceVisibility,
    backgroundColor,
    borderBlockColor,
    borderBlockEndColor,
    borderBlockStartColor,
    borderBottomColor,
    borderBottomEndRadius,
    borderBottomLeftRadius,
    borderBottomRightRadius,
    borderBottomStartRadius,
    borderColor,
    borderCurve,
    borderEndColor,
    borderEndEndRadius,
    borderEndStartRadius,
    borderLeftColor,
    borderRadius,
    borderRightColor,
    borderStartColor,
    borderStartEndRadius,
    borderStartStartRadius,
    borderStyle,
    borderTopColor,
    borderTopEndRadius,
    borderTopLeftRadius,
    borderTopRightRadius,
    borderTopStartRadius,
    opacity,
    elevation,
    pointerEvents,
    cursor,
    shadowColor,
    shadowOffset,
    shadowOpacity,
    shadowRadius,
    transform,
    transformOrigin,
  }),
}));

export default Box;
